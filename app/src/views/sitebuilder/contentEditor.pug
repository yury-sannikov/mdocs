extends ./layout/layout.pug

block head
  title #{application} &middot; Page
  include ./partials/editor-header.pug

block styles
  style.
    textarea[name="ro-ot[htmlContent]"] {
      height: 350px
    }

block scripts
  include ./partials/editor-scripts.pug
  script(src='/app/js/jsoneditor.min.js')
  script.
    JSONEditor.defaults.editors.froala = JSONEditor.defaults.editors.string.extend({
      afterInputReady: function() {
        var self = this;
        if (this.source_code) {
          $(self.input).froalaEditor({
            toolbarInline: false,
          })
          //- .on('froalaEditor.file.beforeUpload', function (e, editor, files) {
          //-   // Return false if you want to stop the file upload.
          //- })
          .on('froalaEditor.file.uploaded', function (e, editor, response) {
            // File was uploaded to the server.
            console.log('uploaded: ' + response);
            // response.link gets the link
          })
          .on('froalaEditor.file.inserted', function (e, editor, $file, response) {
            // File was inserted in the editor.
            console.log('inserted: ' + response);
            // response.link gets the link
          })
          .on('froalaEditor.file.error', function (e, editor, error, response) {
            console.log(error);
            alert(error.message);
          })
          //- .on('froalaEditor.image.beforeUpload', function (e, editor, images) {
          //-   // Return false if you want to stop the image upload.
          //- })
          .on('froalaEditor.image.uploaded', function (e, editor, response) {
            // Image was uploaded to the server.
            console.log('uploaded: ' + response);
            // response.link gets the link
          })
          .on('froalaEditor.image.inserted', function (e, editor, $img, response) {
            // Image was inserted in the editor.
            console.log('inserted: ' + response);
            // response.link gets the link
          })
          .on('froalaEditor.image.replaced', function (e, editor, $img, response) {
            // Image was replaced in the editor.
            console.log('replaced: ' + response);
            // response.link gets the link
          })
          .on('froalaEditor.image.error', function (e, editor, error, response) {
            console.log(error);
            alert(error.message);
          });
        } else {
          this._super();
        }
      }
    });
    JSONEditor.defaults.resolvers.unshift(function(schema) {
      if(schema.type === "string" && schema.format === "html") {
        return "froala";
      }
    });
  script.
   (function(init) {
      init(window.jQuery, window, document);
    }(function($, window, document) {
      var jsoneditor;
      var options = {
        theme: 'bootstrap3',
        iconlib: 'fontawesome4',
        disable_collapse: true,
        disable_edit_json: true,
        disable_properties: true,
        schema: !{schema}
      };
      var page = !{page}
      $(function() {

        var element = document.querySelector('.json-editor-holder');
        jsoneditor = new JSONEditor(element, options);
        jsoneditor.setValue(page);

        $('[data-toggle="tooltip"]').tooltip();
      });
    }));

block content
  .container-fluid
    .row
      .col-md-1.col-md-offset-10
        button.btn.btn-primary.pull-right Save Changes
    .row
      .col-md-10.col-md-offset-1
        .json-editor-holder
    .row
      .col-md-1.col-md-offset-10
        button.btn.btn-primary.pull-right Save Changes

