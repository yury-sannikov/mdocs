extends ../layouts/layout.pug

//- http://cwbuecheler.com/web/tutorials/2014/restful-web-app-node-express-mongodb/

block head
  title #{application} &middot; Locations

block content
  .container
    .row
      //- .col-md-4.col-md-push-8
        .page-header
          h2
            i.fa.fa-user
            | &nbsp;Account Details
        //- USER INFO
        #userInfo.well
          p
            img(id='userPicture', src='', width='100px')
          p
            strong Name:
            |  <span id='userInfoName'></span>
          p.hidden-xs
            strong Email:
            | &nbsp;
            a(href='', id='userInfoEmail')
          p.hidden-xs
            strong Location:
            |  <span id='userInfoLocation'></span>
          p.hidden-xs
            strong Gender:
            |  <span id='userInfoGender'></span>
          p.hidden-xs
            strong Website:
            | &nbsp;
            a(href='', id='userInfoWebsite')
          p
            strong Date Established:
            |  <span id='userInfoEstablished'></span>
          p
            strong Last Logon:
            |  <span id='userInfoLogon'></span>
          p.hidden-xs
            strong Last Update:
            |  <span id='userInfoUpdate'></span>
        //- /USER INFO
      .col-md-12
        .page-header
          h2
            i.fa.fa-user
            | &nbsp;Locations
        a.linknewlocation.btn.btn-success.pull-center(href="#") New Location
        //- Wrapper
        #wrapper

          //- USER LIST
          #userList
            table.table.table-striped
              thead
                th Location name
                th Address
                th Email
                th Phone
                th Actions
              tbody
                each location, i in locations
                  tr
                    td
                      span #{location.name}
                    td
                      span #{location.address}
                    td
                      strong #{location.email}
                    td
                      span #{formatPhone(location.phone)}
                    td
                      a.btn.btn-info.btn-xs(href='/app/location/'+location.id) View
                      | &nbsp;
                      a.linkedit.btn.btn-primary.btn-xs(href="#", data-locationId=location.id) Edit&nbsp;
                      | &nbsp;
                      a.linkdeletelocation.btn.btn-danger.btn-xs(href="#", data-locationId=location.id) Delete&nbsp;
          - if (locations.length == 0)
            span No locations found in a database.
          //- /USER LIST

        //- /WRAPPER


  #deleteModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='deleteModalLabel', aria-hidden='true')
      .modal-dialog.modal-sm
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
            h4#deleteModalLabel.modal-title Delete confirmation
          .modal-body
            h4 Are you sure?
            form#deleteform(action='delete-location', method='POST')
              input.form-control(type='hidden', name='_csrf', value=_csrf)
              input#deleteformid.form-control(type='hidden', name='id')            
          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') No
            button#deleteModalConfirm.btn.btn-primary(type='button') Yes!


  #locationModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
      .modal-dialog.modal-md
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
            h4#myModalLabel.modal-title New Location
          .modal-body
            .row
              .col-sm-12
                h4 Location Details
                form#locationform(action='new-location', method='POST')
                  input.form-control(type='hidden', name='_csrf', value=_csrf)
                  .form-group
                    label.sr-only(for='name') Name
                    .input-group
                      input.form-control(type='text', name='name', id='name', placeholder='Location name')
                  .form-group
                    label.sr-only(for='address') Address
                    .input-group
                      input.form-control(type='text', name='address', id='address', placeholder='Location address')
                  .form-group
                    label.sr-only(for='email') Email
                    input.form-control(type='email', name='email', id='email', placeholder='Email')
                    #hint
                  .form-group
                    label.sr-only(for='phoneMobile') Phone
                    input.form-control(type='tel', name='phoneMobile', id='phoneMobile', placeholder='Phone number e.g. (703) 123-4567', pattern='/(?:(?:\+?1\s*(?:[.-]\s*)?)?(?:(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]‌​)\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.-]\s*)?)([2-9]1[02-9]‌​|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.-]\s*)?([0-9]{4})/', title='Phone Number: +1 (999) 999-9999')
                  h4 Review Site IDs
                  .form-group
                    label.sr-only(for='yelp') Yelp
                    .input-group
                      input.form-control(type='text', name='yelp', id='yelp', placeholder='Yelp ID')
                  .form-group
                    label.sr-only(for='google') Google
                    .input-group
                      input.form-control(type='text', name='google', id='google', placeholder='Google ID')
                  .form-group
                    label.sr-only(for='healthgrades') HealthGrades.com
                    .input-group
                      input.form-control(type='text', name='healthgrades', id='healthgrades', placeholder='HealthGrades.com ID')
                  .form-group
                    label.sr-only(for='vitals') Vitals.com
                    .input-group
                      input.form-control(type='text', name='vitals', id='vitals', placeholder='Vitals.com ID')
                  .form-group
                    label.sr-only(for='mdreviews') RateMDs.com
                    .input-group
                      input.form-control(type='text', name='mdreviews', id='mdreviews', placeholder='RateMDs.com ID')
                  .form-group
                    label.sr-only(for='yellowpages') Yellow Pages
                    .input-group
                      input.form-control(type='text', name='yellowpages', id='yellowpages', placeholder='Yellow Pages ID')
                  
          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') Cancel
            button#sendlocationbutton.btn.btn-primary(type='button') Save


  #editLocationModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='editModalLabel', aria-hidden='true')
      .modal-dialog.modal-md
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
            h4#editLabel.modal-title Edit Location
          .modal-body
            .row
              .col-sm-12
                h4 Location Details
                form#editlocationform(action='update-location', method='POST') 
                  input.form-control(type='hidden', name='editID', id='editID')    
                  input.form-control(type='hidden', name='_csrf', value=_csrf)
                  .form-group
                    label.sr-only(for='name') Name
                    .input-group
                      input.form-control(type='text', name='name', id='editName', placeholder='Location name')
                  .form-group
                    label.sr-only(for='address') Address
                    .input-group
                      input.form-control(type='text', name='address', id='editAddress', placeholder='Location address')
                  .form-group
                    label.sr-only(for='email') Email
                    input.form-control(type='email', name='email', id='editEmail', placeholder='Email')
                    #hint
                  .form-group
                    label.sr-only(for='phoneMobile') Phone
                    input.form-control(type='tel', name='phoneMobile', id='editPhoneMobile', placeholder='Phone number e.g. (703) 123-4567', pattern='/(?:(?:\+?1\s*(?:[.-]\s*)?)?(?:(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]‌​)\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.-]\s*)?)([2-9]1[02-9]‌​|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.-]\s*)?([0-9]{4})/', title='Phone Number: +1 (999) 999-9999')
                  h4 Review Site IDs
                  .form-group
                    label.sr-only(for='yelp') Yelp
                    .input-group
                      input.form-control(type='text', name='yelp', id='editYelp', placeholder='Yelp ID')
                  .form-group
                    label.sr-only(for='google') Google
                    .input-group
                      input.form-control(type='text', name='google', id='editGoogle', placeholder='Google ID')
                  .form-group
                    label.sr-only(for='healthgrades') HealthGrades.com
                    .input-group
                      input.form-control(type='text', name='healthgrades', id='editHealthgrades', placeholder='HealthGrades.com ID')
                  .form-group
                    label.sr-only(for='vitals') Vitals.com
                    .input-group
                      input.form-control(type='text', name='vitals', id='editVitals', placeholder='Vitals.com ID')
                  .form-group
                    label.sr-only(for='mdreviews') RateMDs.com
                    .input-group
                      input.form-control(type='text', name='mdreviews', id='editMDreviews', placeholder='RateMDs.com ID')
                  .form-group
                    label.sr-only(for='yellowpages') Yellow Pages
                    .input-group
                      input.form-control(type='text', name='yellowpages', id='editYellowpages', placeholder='Yellow Pages ID')
                  
          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') Cancel
            button#sendeditlocationbutton.btn.btn-primary(type='button') Save

  //- script(src='lib/moment/min/moment.min.js')
  //- script(src='lib/bootstrap/js/modal.js')
block scripts
  script.
    // Userlist data array for filling in info box
    var userListData = [];
    const locations = !{JSON.stringify(locations)};

    // DOM Ready =============================================================
    $(document).ready(function() {

      //- Async Load Bootstrap Modal
      $.ajax({
        type: 'GET',
        url: '/app/lib/bootstrap/js/modal.js',
        dataType: 'script',
        cache: true
      });


      // Username link click
      //- $('#userList table tbody').on('click', 'td a.linkshowuser', showUserInfo);

      // Delete location link click
      $('#userList table tbody').on('click', 'td a.linkdeletelocation', deleteLocation);

      // New location link click
      $('.linknewlocation').on('click', newLocation);

      // Edit location link click
      $('.linkedit').on('click', editLocation);

    });

    // Functions =============================================================


    // Show User Info
    function showUserInfo(event) {

      // Prevent Link from Firing
      event.preventDefault();

      // Retrieve username from link rel attribute
      var thisUserName = $(this).attr('rel');

      // Get Index of object based on id value
      var arrayPosition = userListData.map(function(arrayItem) { return arrayItem._id; }).indexOf(thisUserName);

      // Get our User Object
      var thisUserObject = userListData[arrayPosition];

      //Populate Info Box  .attr("src", src)
      $('#userPicture').attr("src", (thisUserObject.profile.picture));
      $('#userInfoName').text(thisUserObject.profile.name);
      $('#userInfoEmail').attr('href', 'mailto:' + thisUserObject.email).text(thisUserObject.email);
      $('#userInfoLocation').text(thisUserObject.profile.location);
      $('#userInfoGender').text(thisUserObject.profile.gender);
      if (thisUserObject.profile.website) {
        $('#userInfoWebsite').attr('href', thisUserObject.profile.website).text('Website Link');
      }
      $('#userInfoEstablished').text(moment(thisUserObject.activity.date_established).format('MMMM Do YYYY'));
      $('#userInfoLogon').text(moment(thisUserObject.activity.last_logon).fromNow());
      $('#userInfoUpdate').text(moment(thisUserObject.activity.last_update).fromNow());
    };

    // Delete Location
    function deleteLocation(event) {

      // Prevent Link from Firing
      event.preventDefault();

      // Pop up a confirmation dialog
      // Convoluted because we have to
      // pass the user's id through
      function showmodal(id) {
        // show modal
        $('#deleteModal').modal({keyboard:true,backdrop:'static'});
        // if "yes" clicked
        $('#deleteModalConfirm').one('click', function () {
          // close the modal
          $('#deleteformid').val(id);
          $('#deleteform').submit();
          $('#deleteModal').modal('hide');
        });
      }

      // call modal function with the user's account id
      showmodal($(this).attr('data-locationId'));

    };


    // New Location
    function newLocation(event) {

      // Prevent Link from Firing
      event.preventDefault();

      // Pop up a confirmation dialog
      // Convoluted because we have to
      // pass the user's id through
      function showmodal(id) {
        // show modal
        $('#locationModal').modal({keyboard:true,backdrop:'static'});
        $("#locationform").validate({
          rules: {
            name: "required",
            address: {
              required: true
            },
            email: {
              required: true,
              email: true
            },
            phoneMobile: {
              required: true
            }
          },
          messages: {
            name: "Please specify the name of the location",
            address: {
              required: "We need the location's address"
            },
            email: {
              required: "We need an email address to contact",
              email: "The email address must be in the format of name@domain.com"
            },
            phoneMobile: {
              required: "We need a phone to contact"
            }
          },          
          submitHandler: function(form) {
            form.submit();
          },
          invalidHandler: function(event, validator) {
            console.log(event);
            console.log(validator);
          }
        });
        // if "yes" clicked
        $('#sendlocationbutton').one('click', function () {
            $('#locationform').submit();
        });
      }

      // call modal function with the user's account id
      showmodal($(this).attr('data-locationId'));

    };


    // Edit Location
    function editLocation(event) {

      // Prevent Link from Firing
      event.preventDefault();

      // Pop up a confirmation dialog
      // Convoluted because we have to
      // pass the user's id through
      function showmodal(id) {
        // Populate attributes
        const user = locations.filter((loc) => loc.id == id)[0];

        $('#editID').val(user.id);
        $('#editName').val(user.name);
        $('#editAddress').val(user.address);
        $('#editEmail').val(user.email);
        $('#editPhoneMobile').val(user.phone);
        $('#editYelp').val(user.review_sites.yelp);
        $('#editGoogle').val(user.review_sites.google);
        $('#editHealthgrades').val(user.review_sites.healthgrades);
        $('#editVitals').val(user.review_sites.vitals);
        $('#editMDreviews').val(user.review_sites.mdreviews);
        $('#editYellowpages').val(user.review_sites.yellowpages);

        // show modal
        $('#editLocationModal').modal({keyboard:true,backdrop:'static'});
        $("#editlocationform").validate({
          rules: {
            name: "required",
            address: {
              required: true
            },
            email: {
              required: true,
              email: true
            },
            phoneMobile: {
              required: true
            }
          },
          messages: {
            name: "Please specify the name of the location",
            address: {
              required: "We need the location's address"
            },
            email: {
              required: "We need an email address to contact",
              email: "The email address must be in the format of name@domain.com"
            },
            phoneMobile: {
              required: "We need a phone to contact"
            }
          },          
          submitHandler: function(form) {
            form.submit();
          },
          invalidHandler: function(event, validator) {
            console.log(event);
            console.log(validator);
          }
        });
        // if "yes" clicked
        $('#sendeditlocationbutton').one('click', function () {
            $('#editlocationform').submit();
        });
      }

      // call modal function with the user's account id
      showmodal($(this).attr('data-locationId'));

    };
